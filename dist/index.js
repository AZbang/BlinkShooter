(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
const Entity = require('./Entity');

class Enemy extends Entity {
	constructor(level, x, y, type = 'robot') {
		super(level, x, y, type);

		// coping flags and deleting flags which is not in walking distance
		this.flags = this.level.patruleFlags.slice(0);
		this.flags.forEach((flag, i) => {
			let layer = this.level.layerMap;
			let x = layer.getTileX(this.sprite.x + this.sprite.width / 2);
			let y = layer.getTileY(this.sprite.y + this.sprite.height / 2);
			let x2 = layer.getTileX(flag.x + flag.width / 2);
			let y2 = layer.getTileY(flag.y + flag.height / 2);

			this.level.pathfinder.setCallbackFunction(path => {
				if (path == null) this.flags.splice(i, 1);
			});

			this.level.pathfinder._easyStar.enableDiagonals();
			this.level.pathfinder.preparePathCalculation([x, y], [x2, y2]);
			this.level.pathfinder.calculatePath();
		});
		// patrule mode on!
		this.isPatruleMode = true;
		this.findPathToFlag();
	}

	update() {
		// if enemy saw player, then he starting attack him
		let distance = this.level.physics.arcade.distanceBetween(this.sprite, this.level.player.sprite);
		if (distance < this.radiusVisibility) {
			let angle = this.level.physics.arcade.angleToXY(this.sprite, this.level.player.sprite.x, this.level.player.sprite.y);
			this.level.add.tween(this.sprite).to({ rotation: angle }, this.speed / 2).start();
			this.weapon.fire();
			// patrule mode off
			this.isPatruleMode = false;
		}
	}

	onWounded() {
		!this.hp-- && this.dead();
	}
	findPathToFlag() {
		if (!this.isPatruleMode) return;

		this.flag = this.findСlosestFlag();
		this.flag.countRepeat = Math.round(this.flags.length / 2);

		let layer = this.level.layerMap;
		let x = layer.getTileX(this.sprite.x + this.sprite.width / 2);
		let y = layer.getTileY(this.sprite.y + this.sprite.height / 2);
		let x2 = layer.getTileX(this.flag.x + this.flag.width / 2);
		let y2 = layer.getTileY(this.flag.y + this.flag.height / 2);

		this.level.pathfinder.setCallbackFunction(path => {
			if (path == null) return;
			this.moveToFlag(path);
		});

		this.level.pathfinder.preparePathCalculation([x, y], [x2, y2]);
		this.level.pathfinder.calculatePath();
	}

	moveToFlag(path) {
		let i = 0;
		let timer = this.level.time.create(false);
		timer.loop(this.speed, () => {
			i++;
			if (path[i] == null || !this.isPatruleMode) {
				timer.destroy();
				this.level.time.events.add(1000, this.findPathToFlag, this);
				return;
			}

			this.level.add.tween(this.sprite).to({ rotation: this.level.physics.arcade.angleToXY(this.sprite, path[i].x * 16 + 8, path[i].y * 16 + 8) }, this.speed / 2).start();

			this.level.physics.arcade.moveToXY(this.sprite, path[i].x * 16 + 8, path[i].y * 16 + 8, 30, this.speed);
		}, this);
		timer.start();
	}

	findСlosestFlag() {
		// using not used flags (countRepeat) and finded closest flag
		let min = Infinity;
		let resultFlag;
		this.flags.forEach(flag => {
			let dist = this.level.physics.arcade.distanceBetween(this.sprite, flag);
			if (min > dist) {
				if (this.flag) if (flag.countRepeat) {
					flag.countRepeat--;
					return;
				}

				min = dist;
				resultFlag = flag;
			}
		});
		return resultFlag || this.flag;
	}
}

module.exports = Enemy;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{"./Entity":2}],2:[function(require,module,exports){
const Weapon = require('./Weapon.js');
const entities = require('./entities.json');

class Entity {
	constructor(level, x, y, type) {
		this.type = type;
		this.level = level;

		this.x = x != null ? x : 0;
		this.y = y != null ? y : 0;

		this._entity = entities[type];

		this.hp = this._entity.hp != null ? this._entity.hp : 10;
		this.jumping = this._entity.jump != null ? this._entity.jump : 2;
		this.speed = this._entity.speed != null ? this._entity.speed : 100;
		this.radiusVisibility = this._entity.radiusVisibility != null ? this._entity.radiusVisibility : 100;
		this.isJumping = false;
		this.isDead = false;

		this.headId = this._entity.head != null ? this._entity.head : 0;
		this.bodyId = this._entity.body != null ? this._entity.body : 0;
		this.attachToBodyId = this._entity.attachToBody != null ? this._entity.attachToBody : 0;
		this.weaponId = this._entity.weapon != null ? this._entity.weapon : 'blaster';

		this._createPhaserObjects();
	}

	_createPhaserObjects() {
		this.fxJump = this.level.add.sprite(this.x, this.y, 'fx_jump', 0);
		this.fxJump.alpha = 0;
		this.fxJump.scale.set(2);
		this.fxJump.anchor.set(0.5);
		this.fxJump.smoothed = false;
		this.fxJump.animations.add('active');

		// this.legs = this.level.add.sprite(this.x, this.y, 'legs', 0);
		// this.legs.anchor.set(0.5);
		// this.legs.smoothed = false;
		// this.legs.animations.add('walk');

		this.sprite = this.level.add.sprite(this.x, this.y, 'bodies', this.bodyId);
		this.sprite.anchor.set(0.5);
		this.sprite.smoothed = false;
		this.sprite.class = this;

		this.head = this.level.make.sprite(-12, -7, 'heads', this.headId);
		this.head.smoothed = false;
		this.sprite.addChild(this.head);

		this.attachToBody = this.level.make.sprite(3.5, -4, 'attachToBody', this.attachToBodyId);
		this.attachToBody.smoothed = false;
		this.sprite.addChild(this.attachToBody);

		this.weapon = new Weapon(this, this.weaponId);

		this.level.physics.arcade.enable(this.sprite);
		this.sprite.body.drag.set(150);
		this.sprite.body.maxVelocity.set(100);
		this.sprite.syncBounds = true;

		this.tweenBreathe = this.level.add.tween(this.sprite.scale).to({ x: 1.1, y: 1.1 }, 1000, Phaser.Easing.Quadratic.Out).to({ x: 1, y: 1 }).loop();
		this.tweenBreathe.start();
	}

	_update() {
		if (this.isDead) return;

		// update weapon collisions
		this.weapon.update();

		// collision person with bullets
		let bullets = this.level.bullets.children;
		for (let i = 0; i < bullets.length; i++) {
			if (this.constructor.name === bullets[i].typeOwner) continue;

			this.level.physics.arcade.overlap(bullets[i], this.sprite, (person, bullet) => {
				if (!this.isJumping && bullet.scale.x < 1) {
					this.sprite.body.velocity.x += Math.cos(this.sprite.rotation) * 10;
					this.sprite.body.velocity.y += Math.sin(this.sprite.rotation) * 10;
					this.onWounded && this.onWounded();
					bullet.kill();
				}
			});
		}
		// colliding with solid tiles
		this.level.physics.arcade.collide(this.sprite, this.level.firstLayerMap);
		this.level.physics.arcade.collide(this.sprite, this.level.secondLayerMap);

		// colliding with empty map (dead)
		if (!this.isJumping) {
			for (let i = 0; i < this.level.deadAreas.length; i++) {
				let rect = this.level.deadAreas[i];

				let pl = new Phaser.Rectangle(this.sprite.body.x, this.sprite.body.y, this.sprite.body.width, this.sprite.body.height);
				if (Phaser.Rectangle.intersects(rect, pl)) {
					this.sprite.body.acceleration.set(0);
					this.fallDead();
					return;
				}
			}
		}

		// updating tracking weapon with sprite during jumping
		if (this.isJumping) this.weapon.updateTrack();

		// extends update!
		this.update && this.update();
	}

	jump(power = this.jumping) {
		this.isJumping = true;
		this.tweenBreathe.pause();

		this.tweenJump = this.level.add.tween(this.sprite.scale).to({ x: power, y: power }, 300, Phaser.Easing.Quadratic.Out).to({ x: 1, y: 1 }, 300, Phaser.Easing.Quintic.In).start();
		this.tweenJump.onComplete.add(() => {
			this.isJumping = false;
			this.tweenBreathe.resume();
			this.weapon.updateTrack();
		}, this);
	}

	dead() {
		this.sprite.kill();
		this.isDead = true;
		this.onDead && this.onDead();
	}

	fallDead() {
		this.isDead = true;
		let dead = this.level.add.tween(this.sprite.scale).to({
			x: 0,
			y: 0
		}, 300, Phaser.Easing.Quadratic.In, true);
		dead.onComplete.add(() => {
			this.onDead && this.onDead();
		});
	}
}

module.exports = Entity;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{"./Weapon.js":5,"./entities.json":6}],3:[function(require,module,exports){

class LevelInterface {
	constructor(level, data) {
		this.level = level;

		this.padding = {
			x: 10,
			y: 10
		};

		// HP BAR
		this.lifebox = this.level.add.sprite(this.padding.x, this.padding.y, 'lifebox');
		this.lifebox.fixedToCamera = true;
		this.hp = data.hp;
		for (let i = 0; i < this.hp; i++) {
			let life = this.level.add.sprite(7 * i + 12, 6, 'liferect');
			this.lifebox.addChild(life);
		}

		// SCORES
		this.scores = data.scores;
		this.textScores = this.level.add.bitmapText(this.padding.x + 10, this.padding.y + 30, 'font', this.scores, 20);
		this.textScores.fixedToCamera = true;
		this.textScores.smoothed = false;

		this.timerHP = this.level.time.create(false);
		this.timerScores = this.level.time.create(false);
		this.timerText = this.level.time.create(false);

		// TEXT WINDOW
		this.textWindow = this.level.add.sprite(90, this.padding.y, 'window');
		this.textWindow.alpha = 0;
		this.textWindow.fixedToCamera = true;
		this.textWindow.inputEnabled = true;

		let content = this.level.add.bitmapText(20, 5, 'font2', null, 20);
		this.textWindow.addChild(content);

		let infoText = this.level.add.bitmapText(150, 130, 'font2', 'TAP TO CONTINUE', 20);
		this.textWindow.addChild(infoText);
		this.blinkInfoText = this.level.add.tween(infoText).to({ alpha: 0 }, 300).to({ alpha: 1 }, 300).loop();
	}

	showTextWindow(info, current = 1) {
		this.textWindow.children[0].text = '';

		if (info['text' + current]) {
			this.level.add.tween(this.textWindow).to({ alpha: 1 }, 500).start();

			this.blinkInfoText.start();

			this.textWindow.inputEnabled = true;
			this.textWindow.events.onInputUp.add(() => {
				this.showTextWindow(info, current + 1);
			});

			let i = 0;
			let txt = info['text' + current];
			this.timerText.loop(100, () => {
				if (!txt[i]) {
					this.timerText.stop();
					return;
				}
				this.textWindow.children[0].text += txt[i];
				i++;
			});
			this.timerText.start();
		} else {
			this.blinkInfoText.stop();
			this.timerText.stop();
			this.level.add.tween(this.textWindow).to({ alpha: 0 }, 500).start();
			this.textWindow.inputEnabled = false;
			this.currentTextWindow = 1;
		}
	}

	setHP(val) {
		if (val < 0 || val >= 8) return;

		let sign = val - this.hp > 0 ? 1 : 0;

		this.timerHP.loop(100, () => {
			if (this.hp === val || this.hp < 1 || this.hp > 8) {
				this.timerHP.stop();
				return;
			}
			this.level.add.tween(this.lifebox.children[this.hp - 1]).to({ alpha: sign }, 20).to({ alpha: 1 - sign }, 20).to({ alpha: sign }, 20).to({ alpha: 1 - sign }, 20).to({ alpha: sign }, 20).start();
			sign ? this.hp++ : this.hp--;
		}).start();
	}
	setScores(val) {
		let sign = val - this.scores > 0 ? 1 : 0;
		this.timerScores.loop(10, () => {
			if (this.scores === val || this.scores <= 0) {
				this.timerScores.stop();
				return;
			}
			sign ? this.scores++ : this.scores--;
			this.textScores.text = this.scores;
		});
		this.timerScores.start();
	}
}

module.exports = LevelInterface;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{}],4:[function(require,module,exports){
const Entity = require('./Entity.js');
const LevelInterface = require('./LevelInterface');

class Player extends Entity {
	constructor(level, x, y) {
		super(level, x, y, 'player');

		this.level.camera.follow(this.sprite, Phaser.Camera.FOLLOW_LOCKON, 0.1, 0.1);

		this.interface = new LevelInterface(this.level, { hp: Math.min(8, this.hp), scores: 100 });

		this.cursors = this.level.input.keyboard.createCursorKeys();
		this.jumpButton = this.level.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);
		this.fireButton = this.level.input.keyboard.addKey(Phaser.Keyboard.Z);
	}

	update() {
		// Items use
		this.level.physics.arcade.overlap(this.sprite, this.level.items, (sprite, item) => {
			if (item.type == 'health') this.interface.setHP(this.interface.hp + 2);else this.interface.setScores(this.interface.scores + 100);
			item.kill();
		});

		// Show text window
		for (let i = 0; i < this.level.textAreas.length; i++) {
			let rect = this.level.textAreas[i];

			let pl = new Phaser.Rectangle(this.sprite.body.x, this.sprite.body.y, this.sprite.body.width, this.sprite.body.height);
			if (Phaser.Rectangle.intersects(rect, pl)) {
				this.interface.showTextWindow(rect);
				this.level.textAreas.splice(i, 1);
				return;
			}
		}

		if (this.cursors.up.isDown) this.level.physics.arcade.accelerationFromRotation(this.sprite.rotation, 300, this.sprite.body.acceleration);else this.sprite.body.acceleration.set(0);

		if (this.cursors.left.isDown) this.sprite.body.angularVelocity = -200;else if (this.cursors.right.isDown) this.sprite.body.angularVelocity = 200;else this.sprite.body.angularVelocity = 0;

		if (this.fireButton.isDown && this.interface.scores) {
			this.weapon.fire() && this.interface.setScores(this.interface.scores - 10);
		}

		if (this.jumpButton.isDown && !this.isJumping) {
			this.fxJump.play('active', 20);
			this.fxJump.alpha = 1;
			this.fxJump.x = this.sprite.body.x + 5;
			this.fxJump.y = this.sprite.body.y + 5;
			this.level.add.tween(this.fxJump).to({ alpha: 0 }, 600).start();
			this.jump(this.jumping);
		}
	}

	onWounded() {
		this.interface.setHP(this.interface.hp - 1);
		this.interface.hp === 0 && this.onDead();
	}

	onDead() {
		this.level.state.restart();
	}
}

module.exports = Player;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBsYXllci5qcyJdLCJuYW1lcyI6WyJFbnRpdHkiLCJyZXF1aXJlIiwiTGV2ZWxJbnRlcmZhY2UiLCJQbGF5ZXIiLCJjb25zdHJ1Y3RvciIsImxldmVsIiwieCIsInkiLCJjYW1lcmEiLCJmb2xsb3ciLCJzcHJpdGUiLCJQaGFzZXIiLCJDYW1lcmEiLCJGT0xMT1dfTE9DS09OIiwiaW50ZXJmYWNlIiwiaHAiLCJNYXRoIiwibWluIiwic2NvcmVzIiwiY3Vyc29ycyIsImlucHV0Iiwia2V5Ym9hcmQiLCJjcmVhdGVDdXJzb3JLZXlzIiwianVtcEJ1dHRvbiIsImFkZEtleSIsIktleWJvYXJkIiwiU1BBQ0VCQVIiLCJmaXJlQnV0dG9uIiwiWiIsInVwZGF0ZSIsInBoeXNpY3MiLCJhcmNhZGUiLCJvdmVybGFwIiwiaXRlbXMiLCJpdGVtIiwidHlwZSIsInNldEhQIiwic2V0U2NvcmVzIiwia2lsbCIsImkiLCJ0ZXh0QXJlYXMiLCJsZW5ndGgiLCJyZWN0IiwicGwiLCJSZWN0YW5nbGUiLCJib2R5Iiwid2lkdGgiLCJoZWlnaHQiLCJpbnRlcnNlY3RzIiwic2hvd1RleHRXaW5kb3ciLCJzcGxpY2UiLCJ1cCIsImlzRG93biIsImFjY2VsZXJhdGlvbkZyb21Sb3RhdGlvbiIsInJvdGF0aW9uIiwiYWNjZWxlcmF0aW9uIiwic2V0IiwibGVmdCIsImFuZ3VsYXJWZWxvY2l0eSIsInJpZ2h0Iiwid2VhcG9uIiwiZmlyZSIsImlzSnVtcGluZyIsImZ4SnVtcCIsInBsYXkiLCJhbHBoYSIsImFkZCIsInR3ZWVuIiwidG8iLCJzdGFydCIsImp1bXAiLCJqdW1waW5nIiwib25Xb3VuZGVkIiwib25EZWFkIiwic3RhdGUiLCJyZXN0YXJ0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBU0MsUUFBUSxhQUFSLENBQWY7QUFDQSxNQUFNQyxpQkFBaUJELFFBQVEsa0JBQVIsQ0FBdkI7O0FBRUEsTUFBTUUsTUFBTixTQUFxQkgsTUFBckIs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Q0ssRUFBbEMsQ0FBcUMsRUFBQ0gsT0FBTyxDQUFSLEVBQXJDLEVBQWlELEdBQWpELEVBQXNESSxLQUF0RDtBQUNBLFFBQUtDLElBQUwsQ0FBVSxLQUFLQyxPQUFmO0FBQ0E7QUFDRDs7QUFFREMsYUFBWTtBQUNYLE9BQUsxRCxTQUFMLENBQWVzQixLQUFmLENBQXFCLEtBQUt0QixTQUFMLENBQWVDLEVBQWYsR0FBa0IsQ0FBdkM7QUFDQSxPQUFLRCxTQUFMLENBQWVDLEVBQWYsS0FBc0IsQ0FBdEIsSUFBMkIsS0FBSzBELE1BQUwsRUFBM0I7QUFDQTs7QUFFREEsVUFBUztBQUNSLE9BQUtwRSxLQUFMLENBQVdxRSxLQUFYLENBQWlCQyxPQUFqQjtBQUNBO0FBbkUwQjs7QUFzRTVCQyxPQUFPQyxPQUFQLEdBQWlCMUUsTUFBakIiLCJmaWxlIjoiUGxheWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRW50aXR5ID0gcmVxdWlyZSgnLi9FbnRpdHkuanMnKTtcclxuY29uc3QgTGV2ZWxJbnRlcmZhY2UgPSByZXF1aXJlKCcuL0xldmVsSW50ZXJmYWNlJyk7XHJcblxyXG5jbGFzcyBQbGF5ZXIgZXh0ZW5kcyBFbnRpdHkge1xyXG5cdGNvbnN0cnVjdG9yKGxldmVsLCB4LCB5KSB7XHJcblx0XHRzdXBlcihsZXZlbCwgeCwgeSwgJ3BsYXllcicpO1xyXG5cclxuXHRcdHRoaXMubGV2ZWwuY2FtZXJhLmZvbGxvdyh0aGlzLnNwcml0ZSwgUGhhc2VyLkNhbWVyYS5GT0xMT1dfTE9DS09OICwgMC4xLCAwLjEpO1xyXG5cclxuXHRcdHRoaXMuaW50ZXJmYWNlID0gbmV3IExldmVsSW50ZXJmYWNlKHRoaXMubGV2ZWwsIHtocDogTWF0aC5taW4oOCwgdGhpcy5ocCksIHNjb3JlczogMTAwfSk7XHJcblxyXG5cdFx0dGhpcy5jdXJzb3JzID0gdGhpcy5sZXZlbC5pbnB1dC5rZXlib2FyZC5jcmVhdGVDdXJzb3JLZXlzKCk7XHJcblx0XHR0aGlzLmp1bXBCdXR0b24gPSB0aGlzLmxldmVsLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuS2V5Ym9hcmQuU1BBQ0VCQVIpO1xyXG5cdFx0dGhpcy5maXJlQnV0dG9uID0gdGhpcy5sZXZlbC5pbnB1dC5rZXlib2FyZC5hZGRLZXkoUGhhc2VyLktleWJvYXJkLlopO1xyXG5cdH1cclxuXHJcblx0dXBkYXRlKCkge1xyXG5cdFx0Ly8gSXRlbXMgdXNlXHJcblx0XHR0aGlzLmxldmVsLnBoeXNpY3MuYXJjYWRlLm92ZXJsYXAodGhpcy5zcHJpdGUsIHRoaXMubGV2ZWwuaXRlbXMsIChzcHJpdGUsIGl0ZW0pID0+IHtcclxuXHRcdFx0aWYoaXRlbS50eXBlID09ICdoZWFsdGgnKSB0aGlzLmludGVyZmFjZS5zZXRIUCh0aGlzLmludGVyZmFjZS5ocCsyKTtcclxuXHRcdFx0ZWxzZSB0aGlzLmludGVyZmFjZS5zZXRTY29yZXModGhpcy5pbnRlcmZhY2Uuc2NvcmVzKzEwMCk7XHJcblx0XHRcdGl0ZW0ua2lsbCgpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0Ly8gU2hvdyB0ZXh0IHdpbmRvd1xyXG5cdFx0Zm9yKGxldCBpID0gMDsgaSA8IHRoaXMubGV2ZWwudGV4dEFyZWFzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGxldCByZWN0ID0gdGhpcy5sZXZlbC50ZXh0QXJlYXNbaV07XHJcblxyXG5cdFx0XHRsZXQgcGwgPSBuZXcgUGhhc2VyLlJlY3RhbmdsZSh0aGlzLnNwcml0ZS5ib2R5LngsIHRoaXMuc3ByaXRlLmJvZHkueSwgdGhpcy5zcHJpdGUuYm9keS53aWR0aCwgdGhpcy5zcHJpdGUuYm9keS5oZWlnaHQpO1xyXG5cdFx0XHRpZihQaGFzZXIuUmVjdGFuZ2xlLmludGVyc2VjdHMocmVjdCwgcGwpKSB7XHJcblx0XHRcdFx0dGhpcy5pbnRlcmZhY2Uuc2hvd1RleHRXaW5kb3cocmVjdCk7XHJcblx0XHRcdFx0dGhpcy5sZXZlbC50ZXh0QXJlYXMuc3BsaWNlKGksIDEpO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmKHRoaXMuY3Vyc29ycy51cC5pc0Rvd24pXHJcblx0XHRcdHRoaXMubGV2ZWwucGh5c2ljcy5hcmNhZGUuYWNjZWxlcmF0aW9uRnJvbVJvdGF0aW9uKHRoaXMuc3ByaXRlLnJvdGF0aW9uLCAzMDAsIHRoaXMuc3ByaXRlLmJvZHkuYWNjZWxlcmF0aW9uKTtcclxuXHJcblx0XHRlbHNlIHRoaXMuc3ByaXRlLmJvZHkuYWNjZWxlcmF0aW9uLnNldCgwKTtcclxuXHJcblx0XHRpZih0aGlzLmN1cnNvcnMubGVmdC5pc0Rvd24pXHJcblx0XHRcdHRoaXMuc3ByaXRlLmJvZHkuYW5ndWxhclZlbG9jaXR5ID0gLTIwMDtcclxuXHJcblx0XHRlbHNlIGlmKHRoaXMuY3Vyc29ycy5yaWdodC5pc0Rvd24pXHJcblx0XHRcdHRoaXMuc3ByaXRlLmJvZHkuYW5ndWxhclZlbG9jaXR5ID0gMjAwO1xyXG5cclxuXHRcdGVsc2UgdGhpcy5zcHJpdGUuYm9keS5hbmd1bGFyVmVsb2NpdHkgPSAwO1xyXG5cclxuXHRcdGlmKHRoaXMuZmlyZUJ1dHRvbi5pc0Rvd24gJiYgdGhpcy5pbnRlcmZhY2Uuc2NvcmVzKSB7XHJcblx0XHRcdHRoaXMud2VhcG9uLmZpcmUoKSAmJiB0aGlzLmludGVyZmFjZS5zZXRTY29yZXModGhpcy5pbnRlcmZhY2Uuc2NvcmVzLTEwKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZih0aGlzLmp1bXBCdXR0b24uaXNEb3duICYmICF0aGlzLmlzSnVtcGluZykge1xyXG5cdFx0XHR0aGlzLmZ4SnVtcC5wbGF5KCdhY3RpdmUnLCAyMCk7XHJcblx0XHRcdHRoaXMuZnhKdW1wLmFscGhhID0gMTtcclxuXHRcdFx0dGhpcy5meEp1bXAueCA9IHRoaXMuc3ByaXRlLmJvZHkueCs1O1xyXG5cdFx0XHR0aGlzLmZ4SnVtcC55ID0gdGhpcy5zcHJpdGUuYm9keS55KzU7XHJcblx0XHRcdHRoaXMubGV2ZWwuYWRkLnR3ZWVuKHRoaXMuZnhKdW1wKS50byh7YWxwaGE6IDB9LCA2MDApLnN0YXJ0KCk7XHJcblx0XHRcdHRoaXMuanVtcCh0aGlzLmp1bXBpbmcpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0b25Xb3VuZGVkKCkge1xyXG5cdFx0dGhpcy5pbnRlcmZhY2Uuc2V0SFAodGhpcy5pbnRlcmZhY2UuaHAtMSk7XHJcblx0XHR0aGlzLmludGVyZmFjZS5ocCA9PT0gMCAmJiB0aGlzLm9uRGVhZCgpO1xyXG5cdH1cclxuXHJcblx0b25EZWFkKCkge1xyXG5cdFx0dGhpcy5sZXZlbC5zdGF0ZS5yZXN0YXJ0KCk7XHJcblx0fVxyXG59XHJcblx0XHRcdFxyXG5tb2R1bGUuZXhwb3J0cyA9IFBsYXllcjsiXX0=
},{"./Entity.js":2,"./LevelInterface":3}],5:[function(require,module,exports){
const weapons = require('./weapons.json');

class Weapon {
	constructor(person, type) {
		this.level = person.level;
		this.person = person;

		this._weapons = weapons[type];
		this.id = this._weapons.id != null ? this._weapons.id : 0;
		this.trackX = this._weapons.trackX != null ? this._weapons.trackX : 16;
		this.trackY = this._weapons.trackY != null ? this._weapons.trackY : 4;
		this.speed = this._weapons.speed != null ? this._weapons.speed : 100;
		this.damage = this._weapons.damage != null ? this._weapons.damage : 1;
		this.delay = this._weapons.delay != null ? this._weapons.delay : 10;
		this.quantity = this._weapons.quantity != null ? this._weapons.quantity : 1;

		this.weapon = this.level.add.weapon(this.quantity, 'bullets', this.id, this.level.bullets);
		this.weapon.setBulletFrames(this.id, this.id, true);
		this.weapon.bulletKillType = Phaser.Weapon.KILL_WORLD_BOUNDS;
		this.weapon.bulletSpeed = this.speed;
		this.weapon.fireRate = this.delay;
		this.weapon.bullets.typeOwner = this.person.constructor.name;

		this.fxFire = this.level.add.sprite(0, 0, 'fx_fire', 0);
		this.fxFire.alpha = 0;
		this.fxFire.scale.set(2);
		this.fxFire.anchor.set(0.5);
		this.fxFire.smoothed = false;
		this.fxFire.animations.add('active');

		this.fxCollide = this.level.add.sprite(0, 0, 'fx_explosion', 0);
		this.fxCollide.alpha = 0;
		this.fxCollide.anchor.set(0.5);
		this.fxCollide.smoothed = false;
		this.fxCollide.animations.add('active');

		this.updateTrack();
	}

	updateTrack() {
		let x = this.trackX * this.person.sprite.scale.x;
		let y = this.trackY * this.person.sprite.scale.y;

		this.weapon.trackSprite(this.person.sprite, x, y, true);
	}
	fire() {
		let bullet = this.weapon.fire();

		if (bullet) {
			bullet.smoothed = false;
			bullet.scale.setTo(this.person.sprite.scale.x / 2, this.person.sprite.scale.y / 2);
			bullet.body.updateBounds();

			this.person.sprite.body.velocity.x -= Math.cos(this.person.sprite.rotation) * 100;
			this.person.sprite.body.velocity.y -= Math.sin(this.person.sprite.rotation) * 100;

			this.fxFire.scale.x = this.person.sprite.scale.x;
			this.fxFire.scale.y = this.person.sprite.scale.y;
			this.fxFire.x = this.weapon._rotatedPoint.x;
			this.fxFire.y = this.weapon._rotatedPoint.y;
			this.fxFire.alpha = 1;
			this.fxFire.play('active', 20);
			this.level.add.tween(this.fxFire).to({ alpha: 0 }, 600).start();

			return true;
		}
	}
	update() {
		this.level.physics.arcade.collide(this.weapon.bullets, this.level.layerMap, bullet => {
			this.fxCollide.x = bullet.x;
			this.fxCollide.y = bullet.y;
			this.fxCollide.alpha = 1;
			this.fxCollide.play('active', 100);
			this.level.add.tween(this.fxCollide).to({ alpha: 0 }, 300).start();

			bullet.kill();
		});
	}
}

module.exports = Weapon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{"./weapons.json":7}],6:[function(require,module,exports){
module.exports={
	"player": {
		"hp": 10,
		"jump": 3,
		"speed": 100,

		"head": 5,
		"body": 3,
		"attachToBody": 1,
		"weapon": "blaster"
	},
	"robot": {
		"hp": 3,
		"jump": 3,
		"speed": 100,
		"radiusVisibility": 150,

		"head": 7,
		"body": 1,
		"attachToBody": 1,
		"weapon": "blaster"
	},
	"robot2": {
		"hp": 10,
		"jump": 3,
		"speed": 100,
		"radiusVisibility": 150,

		"head": 10,
		"body": 3,
		"attachToBody": 1,
		"weapon": "blaster"
	},
	"robot3": {
		"hp": 10,
		"jump": 3,
		"speed": 100,
		"radiusVisibility": 150,

		"head": 13,
		"body": 3,
		"attachToBody": 1,
		"weapon": "blaster"
	}
}
},{}],7:[function(require,module,exports){
module.exports={
	"roket": {
		"id": 1,
		"range": 100,
		"speed": 400,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"blaster": {
		"id": 3,
		"range": 100,
		"speed": 400,
		"damage": 10,
		"delay": 200,
		"quantity": 2
		// "trackX": 1,
		// "trackY": 1
	},
	"blaster2": {
		"id": 1,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"blaster3": {
		"id": 1,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"blaster4": {
		"id": 1,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1		
	},
	"saber": {
		"id": null,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"revolver": {
		"id": 1,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"rifle": {
		"id": 1,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"fist": {
		"id": null,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"machinegun": {
		"id": 1,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"bazooka": {
		"id": 1,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	},
	"energygun": {
		"id": 1,
		"range": 100,
		"speed": 100,
		"damage": 10,
		"delay": 10,
		"quantity": 10,
		"trackX": 1,
		"trackY": 1
	}
}
},{}],8:[function(require,module,exports){
const Boot = require('./states/Boot.js');
const Preload = require('./states/Preload.js');
const Menu = require('./states/Menu.js');
const Level = require('./states/Level.js');
const Settings = require('./states/Settings.js');
const LevelManager = require('./states/LevelManager.js');

const game = new Phaser.Game(480, 320, Phaser.AUTO, 'ShooterBlink');

game.state.add('Menu', Menu);
game.state.add('Settings', Settings);
game.state.add('Level', Level);
game.state.add('LevelManager', LevelManager);
game.state.add('Preload', Preload);
game.state.add('Boot', Boot, true);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJvb3QiLCJyZXF1aXJlIiwiUHJlbG9hZCIsIk1lbnUiLCJMZXZlbCIsIlNldHRpbmdzIiwiTGV2ZWxNYW5hZ2VyIiwiZ2FtZSIsIlBoYXNlciIsIkdhbWUiLCJBVVRPIiwic3RhdGUiLCJhZGQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU9DLFFBQVEsa0JBQVIsQ0FBYjtBQUNBLE1BQU1DLFVBQVVELFFBQVEscUJBQVIsQ0FBaEI7QUFDQSxNQUFNRSxPQUFPRixRQUFRLGtCQUFSLENBQWI7QUFDQSxNQUFNRyxRQUFRSCxRQUFRLG1CQUFSLENBQWQ7QUFDQSxNQUFNSSxXQUFXSixRQUFRLHNCQUFSLENBQWpCO0FBQ0EsTUFBTUssZUFBZUwsUUFBUSwwQkFBUixDQUFyQjs7QUFFQSxNQUFNTSxPQUFPLElBQUlDLE9BQU9DLElBQVgsQ0FBZ0IsR0FBaEIsRUFBcUIsR0FBckIsRUFBMEJELE9BQU9FLElBQWpDLEVBQXVDLGNBQXZDLENBQWI7O0FBRUFILEtBQUtJLEtBQUwsQ0FBV0MsR0FBWCxDQUFlLE1BQWYsRUFBdUJULElBQXZCO0FBQ0FJLEtBQUtJLEtBQUwsQ0FBV0MsR0FBWCxDQUFlLFVBQWYsRUFBMkJQLFFBQTNCO0FBQ0FFLEtBQUtJLEtBQUwsQ0FBV0MsR0FBWCxDQUFlLE9BQWYsRUFBd0JSLEtBQXhCO0FBQ0FHLEtBQUtJLEtBQUwsQ0FBV0MsR0FBWCxDQUFlLGNBQWYsRUFBK0JOLFlBQS9CO0FBQ0FDLEtBQUtJLEtBQUwsQ0FBV0MsR0FBWCxDQUFlLFNBQWYsRUFBMEJWLE9BQTFCO0FBQ0FLLEtBQUtJLEtBQUwsQ0FBV0MsR0FBWCxDQUFlLE1BQWYsRUFBdUJaLElBQXZCLEVBQTZCLElBQTdCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQm9vdCA9IHJlcXVpcmUoJy4vc3RhdGVzL0Jvb3QuanMnKTtcclxuY29uc3QgUHJlbG9hZCA9IHJlcXVpcmUoJy4vc3RhdGVzL1ByZWxvYWQuanMnKTtcclxuY29uc3QgTWVudSA9IHJlcXVpcmUoJy4vc3RhdGVzL01lbnUuanMnKTtcclxuY29uc3QgTGV2ZWwgPSByZXF1aXJlKCcuL3N0YXRlcy9MZXZlbC5qcycpO1xyXG5jb25zdCBTZXR0aW5ncyA9IHJlcXVpcmUoJy4vc3RhdGVzL1NldHRpbmdzLmpzJyk7XHJcbmNvbnN0IExldmVsTWFuYWdlciA9IHJlcXVpcmUoJy4vc3RhdGVzL0xldmVsTWFuYWdlci5qcycpO1xyXG5cclxuY29uc3QgZ2FtZSA9IG5ldyBQaGFzZXIuR2FtZSg0ODAsIDMyMCwgUGhhc2VyLkFVVE8sICdTaG9vdGVyQmxpbmsnKTtcclxuXHJcbmdhbWUuc3RhdGUuYWRkKCdNZW51JywgTWVudSk7XHJcbmdhbWUuc3RhdGUuYWRkKCdTZXR0aW5ncycsIFNldHRpbmdzKTtcclxuZ2FtZS5zdGF0ZS5hZGQoJ0xldmVsJywgTGV2ZWwpO1xyXG5nYW1lLnN0YXRlLmFkZCgnTGV2ZWxNYW5hZ2VyJywgTGV2ZWxNYW5hZ2VyKTtcclxuZ2FtZS5zdGF0ZS5hZGQoJ1ByZWxvYWQnLCBQcmVsb2FkKTtcclxuZ2FtZS5zdGF0ZS5hZGQoJ0Jvb3QnLCBCb290LCB0cnVlKTtcclxuIl19
},{"./states/Boot.js":9,"./states/Level.js":10,"./states/LevelManager.js":11,"./states/Menu.js":12,"./states/Preload.js":13,"./states/Settings.js":14}],9:[function(require,module,exports){
class Boot {
	constructor() {
		this.w = 480;
		this.h = 320;
	}

	create() {
		this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
		this.scale.fullScreenScaleMode = Phaser.ScaleManager.EXACT_FIT;
		this.scale.pageAlignHorizontally = true;
		this.scale.pageAlignVertically = true;
		this.scale.setMaximum();

		this.game.renderer.renderSession.roundPixels = true;
		Phaser.Canvas.setImageRenderingCrisp(this.game.canvas);

		this.state.start('Preload');
	}
}

module.exports = Boot;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJvb3QuanMiXSwibmFtZXMiOlsiQm9vdCIsImNvbnN0cnVjdG9yIiwidyIsImgiLCJjcmVhdGUiLCJzY2FsZSIsInNjYWxlTW9kZSIsIlBoYXNlciIsIlNjYWxlTWFuYWdlciIsIlNIT1dfQUxMIiwiZnVsbFNjcmVlblNjYWxlTW9kZSIsIkVYQUNUX0ZJVCIsInBhZ2VBbGlnbkhvcml6b250YWxseSIsInBhZ2VBbGlnblZlcnRpY2FsbHkiLCJzZXRNYXhpbXVtIiwiZ2FtZSIsInJlbmRlcmVyIiwicmVuZGVyU2Vzc2lvbiIsInJvdW5kUGl4ZWxzIiwiQ2FudmFzIiwic2V0SW1hZ2VSZW5kZXJpbmdDcmlzcCIsImNhbnZhcyIsInN0YXRlIiwic3RhcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFOLENBQVc7QUFDVkMsZUFBYztBQUNiLE9BQUtDLENBQUwsR0FBUyxHQUFUO0FBQ0EsT0FBS0MsQ0FBTCxHQUFTLEdBQVQ7QUFDQTs7QUFFREMsVUFBUztBQUNSLE9BQUtDLEtBQUwsQ0FBV0MsU0FBWCxHQUF1QkMsT0FBT0MsWUFBUCxDQUFvQkMsUUFBM0M7QUFDQSxPQUFLSixLQUFMLENBQVdLLG1CQUFYLEdBQWlDSCxPQUFPQyxZQUFQLENBQW9CRyxTQUFyRDtBQUNBLE9BQUtOLEtBQUwsQ0FBV08scUJBQVgsR0FBbUMsSUFBbkM7QUFDQSxPQUFLUCxLQUFMLENBQVdRLG1CQUFYLEdBQWlDLElBQWpDO0FBQ0EsT0FBS1IsS0FBTCxDQUFXUyxVQUFYOztBQUVBLE9BQUtDLElBQUwsQ0FBVUMsUUFBVixDQUFtQkMsYUFBbkIsQ0FBaUNDLFdBQWpDLEdBQStDLElBQS9DO0FBQ0FYLFNBQU9ZLE1BQVAsQ0FBY0Msc0JBQWQsQ0FBcUMsS0FBS0wsSUFBTCxDQUFVTSxNQUEvQzs7QUFFQSxPQUFLQyxLQUFMLENBQVdDLEtBQVgsQ0FBaUIsU0FBakI7QUFDQTtBQWpCUzs7QUFvQlhDLE9BQU9DLE9BQVAsR0FBaUJ6QixJQUFqQiIsImZpbGUiOiJCb290LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQm9vdCB7XHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHR0aGlzLncgPSA0ODA7XHJcblx0XHR0aGlzLmggPSAzMjA7XHJcblx0fVxyXG5cclxuXHRjcmVhdGUoKSB7XHJcblx0XHR0aGlzLnNjYWxlLnNjYWxlTW9kZSA9IFBoYXNlci5TY2FsZU1hbmFnZXIuU0hPV19BTEw7XHJcblx0XHR0aGlzLnNjYWxlLmZ1bGxTY3JlZW5TY2FsZU1vZGUgPSBQaGFzZXIuU2NhbGVNYW5hZ2VyLkVYQUNUX0ZJVDtcclxuXHRcdHRoaXMuc2NhbGUucGFnZUFsaWduSG9yaXpvbnRhbGx5ID0gdHJ1ZTtcclxuXHRcdHRoaXMuc2NhbGUucGFnZUFsaWduVmVydGljYWxseSA9IHRydWU7XHJcblx0XHR0aGlzLnNjYWxlLnNldE1heGltdW0oKTtcclxuXHJcblx0XHR0aGlzLmdhbWUucmVuZGVyZXIucmVuZGVyU2Vzc2lvbi5yb3VuZFBpeGVscyA9IHRydWU7XHJcblx0XHRQaGFzZXIuQ2FudmFzLnNldEltYWdlUmVuZGVyaW5nQ3Jpc3AodGhpcy5nYW1lLmNhbnZhcyk7XHJcblxyXG5cdFx0dGhpcy5zdGF0ZS5zdGFydCgnUHJlbG9hZCcpO1xyXG5cdH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBCb290OyJdfQ==
},{}],10:[function(require,module,exports){
const Player = require('../game/Player');
const Enemy = require('../game/Enemy');

class Level {
	constructor() {
		this.level;
	}
	preload() {
		this.load.tilemap('map', '../assets/levels/test/level1.json', null, Phaser.Tilemap.TILED_JSON);
	}
	create() {
		// TileMap
		this.map = this.game.add.tilemap('map', 16, 16);
		this.map.addTilesetImage('tilemap');
		this.map.debugMap = true;

		this.bg = this.game.add.tileSprite(0, 0, 10000, 10000, 'bg');
		this.world.setBounds(0, 0, 10000, 10000);

		this.firstLayerMap = this.map.createLayer('map1');
		this.firstLayerMap.resizeWorld();
		this.firstLayerMap.smoothed = false;

		this.secondLayerMap = this.map.createLayer('map2');
		this.secondLayerMap.resizeWorld();
		this.secondLayerMap.smoothed = false;

		// PathFinder
		let arr = [];
		console.log(this.map.tilesets[0].total);
		for (let i in this.map.tilesets[0].tileProperties) {
			if (this.map.tilesets[0].tileProperties[i].solid === 'false') arr.push(+i);else {
				this.map.setCollision(+i, true, this.firstLayerMap);
				this.map.setCollision(+i, true, this.secondLayerMap);
			}
		}

		this.pathfinder = this.game.plugins.add(Phaser.Plugin.PathFinderPlugin);
		this.pathfinder.setGrid(this.map.layers[0].data, arr);

		this._createTextAreas();
		this._createDeadAreas();
		this._createPatruleFlags();
		this._createItems();
		this._createEnemies();

		// group for bullets
		this.bullets = this.add.group();

		// Player
		let posPlayer = this.map.objects.player[0];
		this.player = new Player(this, posPlayer.x + posPlayer.width / 2, posPlayer.y + posPlayer.height / 2);
	}
	_createEnemies() {
		this.enemies = this.game.add.group();
		this.map.objects.spawner && this.map.objects.spawner.forEach(spawn => {
			let enemy = new Enemy(this, spawn.x + spawn.width / 2, spawn.y + spawn.height / 2, spawn.properties.type);
			this.enemies.add(enemy.sprite);
		});
	}
	_createItems() {
		this.items = this.add.group();
		this.items.enableBody = true;
		this.map.objects.items && this.map.objects.items.forEach(rect => {
			let id;
			if (rect.properties.type == 'coins') id = 5;else if (rect.properties.type == 'health') id = 2;else id = 0;

			let item = this.add.sprite(rect.x + rect.width / 2, rect.y + rect.height / 2, 'items', id);
			item.type = rect.properties.type;
			item.smoothed = false;
			this.items.add(item);
		});
	}
	_createPatruleFlags() {
		this.patruleFlags = [];
		this.map.objects.moving && this.map.objects.moving.forEach(rect => {
			let rectangle = new Phaser.Rectangle(rect.x, rect.y, rect.width, rect.height);
			this.patruleFlags.push(rectangle);
		});
	}
	_createDeadAreas() {
		this.deadAreas = [];
		this.map.objects.deadArea && this.map.objects.deadAreas.forEach(rect => {
			let rectangle = new Phaser.Rectangle(rect.x, rect.y, rect.width, rect.height);
			this.deadAreas.push(rectangle);
		});
	}

	_createTextAreas() {
		this.textAreas = [];
		this.map.objects.textAreas && this.map.objects.textAreas.forEach(rect => {
			let rectangle = new Phaser.Rectangle(rect.x, rect.y, rect.width, rect.height);
			let i = 1;
			while (rect.properties['text' + i]) {
				rectangle['text' + i] = rect.properties['text' + i];
				i++;
			}
			this.textAreas.push(rectangle);
		});
	}

	update() {
		this.world.pivot.x = 1 / this.player.sprite.x;
		this.world.pivot.y = 1 / this.player.sprite.y;
		this.player._update();

		for (let i = 0; i < this.enemies.children.length; i++) {
			this.enemies.children[i].class._update();
		}

		this.bg.tilePosition.x += 1;
		this.bg.tilePosition.y += 1;
	}
}

module.exports = Level;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{"../game/Enemy":1,"../game/Player":4}],11:[function(require,module,exports){
class LevelManager {
	constructor(game) {
		this.level;
	}
	create() {
		this.bg = this.game.add.tileSprite(0, 0, this.world.width, this.world.height, 'bg');

		this.label = this.add.bitmapText(this.world.centerX, 50, 'font', 'LEVEL SELECT', 30);
		this.label.anchor.set(0.5);
		this.label.smoothed = false;

		this.buttonsLevelSelect = this.add.group();
		let i = 0;
		for (let y = 0; y < 3; y++) {
			for (let x = 0; x < 8; x++) {
				i++;
				let btn = this.add.bitmapText(45 * x + 80, 45 * y + 110, 'font', i, 18);
				btn.anchor.set(0.5);
				btn.inputEnabled = true;
				this.buttonsLevelSelect.add(btn);
			}
		}
		this.buttonsLevelSelect.x = this.world.centerX - 30 * 8;
		this.buttonsLevelSelect.inputEnableChildren = true;

		this.buttonsLevelSelect.onChildInputDown.add(btn => {
			this.add.tween(btn.scale).to({ x: 1.3, y: 1.3 }, 300).start();
		});
		this.buttonsLevelSelect.onChildInputUp.add(this.goLevel, this);
		this.buttonsLevelSelect.onChildInputOver.add(btn => {
			this.add.tween(btn.scale).to({ x: 1.3, y: 1.3 }, 300).start();
		});
		this.buttonsLevelSelect.onChildInputOut.add(btn => {
			this.add.tween(btn.scale).to({ x: 1, y: 1 }, 300).start();
		});
	}

	goLevel(i) {
		this.state.start('Level');
	}

	update() {
		this.bg.tilePosition.x += 1;
		this.bg.tilePosition.y += 1;
	}
}

module.exports = LevelManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxldmVsTWFuYWdlci5qcyJdLCJuYW1lcyI6WyJMZXZlbE1hbmFnZXIiLCJjb25zdHJ1Y3RvciIsImdhbWUiLCJsZXZlbCIsImNyZWF0ZSIsImJnIiwiYWRkIiwidGlsZVNwcml0ZSIsIndvcmxkIiwid2lkdGgiLCJoZWlnaHQiLCJsYWJlbCIsImJpdG1hcFRleHQiLCJjZW50ZXJYIiwiYW5jaG9yIiwic2V0Iiwic21vb3RoZWQiLCJidXR0b25zTGV2ZWxTZWxlY3QiLCJncm91cCIsImkiLCJ5IiwieCIsImJ0biIsImlucHV0RW5hYmxlZCIsImlucHV0RW5hYmxlQ2hpbGRyZW4iLCJvbkNoaWxkSW5wdXREb3duIiwidHdlZW4iLCJzY2FsZSIsInRvIiwic3RhcnQiLCJvbkNoaWxkSW5wdXRVcCIsImdvTGV2ZWwiLCJvbkNoaWxkSW5wdXRPdmVyIiwib25DaGlsZElucHV0T3V0Iiwic3RhdGUiLCJ1cGRhdGUiLCJ0aWxlUG9zaXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxZQUFOLENBQW1CO0FBQ2xCQyxhQUFZQyxJQUFaLEVBQWtCO0FBQ2pCLE9BQUtDLEtBQUw7QUFDQTtBQUNEQyxVQUFTO0FBQ1IsT0FBS0MsRUFBTCxHQUFVLEtBQUtILElBQUwsQ0FBVUksR0FBVixDQUFjQyxVQUFkLENBQXlCLENBQXpCLEVBQTRCLENBQTVCLEVBQStCLEtBQUtDLEtBQUwsQ0FBV0MsS0FBMUMsRUFBaUQsS0FBS0QsS0FBTCxDQUFXRSxNQUE1RCxFQUFvRSxJQUFwRSxDQUFWOztBQUVBLE9BQUtDLEtBQUwsR0FBYSxLQUFLTCxHQUFMLENBQVNNLFVBQVQsQ0FBb0IsS0FBS0osS0FBTCxDQUFXSyxPQUEvQixFQUF3QyxFQUF4QyxFQUE0QyxNQUE1QyxFQUFvRCxjQUFwRCxFQUFvRSxFQUFwRSxDQUFiO0FBQ0EsT0FBS0YsS0FBTCxDQUFXRyxNQUFYLENBQWtCQyxHQUFsQixDQUFzQixHQUF0QjtBQUNBLE9BQUtKLEtBQUwsQ0FBV0ssUUFBWCxHQUFzQixLQUF0Qjs7QUFFQSxPQUFLQyxrQkFBTCxHQUEwQixLQUFLWCxHQUFMLENBQVNZLEtBQVQsRUFBMUI7QUFDQSxNQUFJQyxJQUFJLENBQVI7QUFDQSxPQUFJLElBQUlDLElBQUksQ0FBWixFQUFlQSxJQUFJLENBQW5CLEVBQXNCQSxHQUF0QixFQUEyQjtBQUMxQixRQUFJLElBQUlDLElBQUksQ0FBWixFQUFlQSxJQUFJLENBQW5CLEVBQXNCQSxHQUF0QixFQUEyQjtBQUMxQkY7QUFDQSxRQUFJRyxNQUFNLEtBQUtoQixHQUFMLENBQVNNLFVBQVQsQ0FBb0IsS0FBR1MsQ0FBSCxHQUFLLEVBQXpCLEVBQTZCLEtBQUdELENBQUgsR0FBSyxHQUFsQyxFQUF1QyxNQUF2QyxFQUErQ0QsQ0FBL0MsRUFBa0QsRUFBbEQsQ0FBVjtBQUNBRyxRQUFJUixNQUFKLENBQVdDLEdBQVgsQ0FBZSxHQUFmO0FBQ0FPLFFBQUlDLFlBQUosR0FBbUIsSUFBbkI7QUFDQSxTQUFLTixrQkFBTCxDQUF3QlgsR0FBeEIsQ0FBNEJnQixHQUE1QjtBQUNBO0FBQ0Q7QUFDRCxPQUFLTCxrQkFBTCxDQUF3QkksQ0FBeEIsR0FBNEIsS0FBS2IsS0FBTCxDQUFXSyxPQUFYLEdBQW1CLEtBQUcsQ0FBbEQ7QUFDQSxPQUFLSSxrQkFBTCxDQUF3Qk8sbUJBQXhCLEdBQThDLElBQTlDOztBQUVBLE9BQUtQLGtCQUFMLENBQXdCUSxnQkFBeEIsQ0FBeUNuQixHQUF6QyxDQUE4Q2dCLEdBQUQsSUFBUztBQUNyRCxRQUFLaEIsR0FBTCxDQUFTb0IsS0FBVCxDQUFlSixJQUFJSyxLQUFuQixFQUEwQkMsRUFBMUIsQ0FBNkIsRUFBQ1AsR0FBRyxHQUFKLEVBQVNELEdBQUcsR0FBWixFQUE3QixFQUErQyxHQUEvQyxFQUFvRFMsS0FBcEQ7QUFDQSxHQUZEO0FBR0EsT0FBS1osa0JBQUwsQ0FBd0JhLGNBQXhCLENBQXVDeEIsR0FBdkMsQ0FBMkMsS0FBS3lCLE9BQWhELEVBQXlELElBQXpEO0FBQ0EsT0FBS2Qsa0JBQUwsQ0FBd0JlLGdCQUF4QixDQUF5QzFCLEdBQXpDLENBQThDZ0IsR0FBRCxJQUFTO0FBQ3JELFFBQUtoQixHQUFMLENBQVNvQixLQUFULENBQWVKLElBQUlLLEtBQW5CLEVBQTBCQyxFQUExQixDQUE2QixFQUFDUCxHQUFHLEdBQUosRUFBU0QsR0FBRyxHQUFaLEVBQTdCLEVBQStDLEdBQS9DLEVBQW9EUyxLQUFwRDtBQUNBLEdBRkQ7QUFHQSxPQUFLWixrQkFBTCxDQUF3QmdCLGVBQXhCLENBQXdDM0IsR0FBeEMsQ0FBNkNnQixHQUFELElBQVM7QUFDcEQsUUFBS2hCLEdBQUwsQ0FBU29CLEtBQVQsQ0FBZUosSUFBSUssS0FBbkIsRUFBMEJDLEVBQTFCLENBQTZCLEVBQUNQLEdBQUcsQ0FBSixFQUFPRCxHQUFHLENBQVYsRUFBN0IsRUFBMkMsR0FBM0MsRUFBZ0RTLEtBQWhEO0FBQ0EsR0FGRDtBQUdBOztBQUVERSxTQUFRWixDQUFSLEVBQVc7QUFDVixPQUFLZSxLQUFMLENBQVdMLEtBQVgsQ0FBaUIsT0FBakI7QUFDQTs7QUFFRE0sVUFBUztBQUNSLE9BQUs5QixFQUFMLENBQVErQixZQUFSLENBQXFCZixDQUFyQixJQUEwQixDQUExQjtBQUNBLE9BQUtoQixFQUFMLENBQVErQixZQUFSLENBQXFCaEIsQ0FBckIsSUFBMEIsQ0FBMUI7QUFDQTtBQTVDaUI7O0FBK0NuQmlCLE9BQU9DLE9BQVAsR0FBaUJ0QyxZQUFqQiIsImZpbGUiOiJMZXZlbE1hbmFnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBMZXZlbE1hbmFnZXIge1xyXG5cdGNvbnN0cnVjdG9yKGdhbWUpIHtcclxuXHRcdHRoaXMubGV2ZWw7XHJcblx0fVxyXG5cdGNyZWF0ZSgpIHtcclxuXHRcdHRoaXMuYmcgPSB0aGlzLmdhbWUuYWRkLnRpbGVTcHJpdGUoMCwgMCwgdGhpcy53b3JsZC53aWR0aCwgdGhpcy53b3JsZC5oZWlnaHQsICdiZycpO1xyXG5cclxuXHRcdHRoaXMubGFiZWwgPSB0aGlzLmFkZC5iaXRtYXBUZXh0KHRoaXMud29ybGQuY2VudGVyWCwgNTAsICdmb250JywgJ0xFVkVMIFNFTEVDVCcsIDMwKTtcclxuXHRcdHRoaXMubGFiZWwuYW5jaG9yLnNldCgwLjUpO1xyXG5cdFx0dGhpcy5sYWJlbC5zbW9vdGhlZCA9IGZhbHNlO1xyXG5cclxuXHRcdHRoaXMuYnV0dG9uc0xldmVsU2VsZWN0ID0gdGhpcy5hZGQuZ3JvdXAoKTtcclxuXHRcdGxldCBpID0gMDtcclxuXHRcdGZvcihsZXQgeSA9IDA7IHkgPCAzOyB5KyspIHtcclxuXHRcdFx0Zm9yKGxldCB4ID0gMDsgeCA8IDg7IHgrKykge1xyXG5cdFx0XHRcdGkrKztcclxuXHRcdFx0XHRsZXQgYnRuID0gdGhpcy5hZGQuYml0bWFwVGV4dCg0NSp4KzgwLCA0NSp5KzExMCwgJ2ZvbnQnLCBpLCAxOCk7XHJcblx0XHRcdFx0YnRuLmFuY2hvci5zZXQoMC41KTtcclxuXHRcdFx0XHRidG4uaW5wdXRFbmFibGVkID0gdHJ1ZTtcclxuXHRcdFx0XHR0aGlzLmJ1dHRvbnNMZXZlbFNlbGVjdC5hZGQoYnRuKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0dGhpcy5idXR0b25zTGV2ZWxTZWxlY3QueCA9IHRoaXMud29ybGQuY2VudGVyWC0zMCo4O1xyXG5cdFx0dGhpcy5idXR0b25zTGV2ZWxTZWxlY3QuaW5wdXRFbmFibGVDaGlsZHJlbiA9IHRydWU7XHJcblxyXG5cdFx0dGhpcy5idXR0b25zTGV2ZWxTZWxlY3Qub25DaGlsZElucHV0RG93bi5hZGQoKGJ0bikgPT4ge1xyXG5cdFx0XHR0aGlzLmFkZC50d2VlbihidG4uc2NhbGUpLnRvKHt4OiAxLjMsIHk6IDEuM30sIDMwMCkuc3RhcnQoKTtcclxuXHRcdH0pO1xyXG5cdFx0dGhpcy5idXR0b25zTGV2ZWxTZWxlY3Qub25DaGlsZElucHV0VXAuYWRkKHRoaXMuZ29MZXZlbCwgdGhpcyk7XHJcblx0XHR0aGlzLmJ1dHRvbnNMZXZlbFNlbGVjdC5vbkNoaWxkSW5wdXRPdmVyLmFkZCgoYnRuKSA9PiB7XHJcblx0XHRcdHRoaXMuYWRkLnR3ZWVuKGJ0bi5zY2FsZSkudG8oe3g6IDEuMywgeTogMS4zfSwgMzAwKS5zdGFydCgpO1xyXG5cdFx0fSk7XHJcblx0XHR0aGlzLmJ1dHRvbnNMZXZlbFNlbGVjdC5vbkNoaWxkSW5wdXRPdXQuYWRkKChidG4pID0+IHtcclxuXHRcdFx0dGhpcy5hZGQudHdlZW4oYnRuLnNjYWxlKS50byh7eDogMSwgeTogMX0sIDMwMCkuc3RhcnQoKTtcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0Z29MZXZlbChpKSB7XHJcblx0XHR0aGlzLnN0YXRlLnN0YXJ0KCdMZXZlbCcpO1xyXG5cdH1cclxuXHJcblx0dXBkYXRlKCkge1xyXG5cdFx0dGhpcy5iZy50aWxlUG9zaXRpb24ueCArPSAxO1xyXG5cdFx0dGhpcy5iZy50aWxlUG9zaXRpb24ueSArPSAxO1xyXG5cdH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBMZXZlbE1hbmFnZXI7Il19
},{}],12:[function(require,module,exports){
class Menu {
	constructor() {}
	create() {
		this.bg = this.add.tileSprite(0, 0, this.world.width, this.world.height, 'bg');

		this.labelPath1 = this.add.bitmapText(87, 25, 'font', 'BLINK', 35);
		this.labelPath1.smoothed = false;
		this.add.tween(this.labelPath1).to({ alpha: 0 }, 200).to({ alpha: 1 }, 100).start().loop();

		this.labelPart2 = this.add.bitmapText(248, 35, 'font', 'SHOOTER', 25);
		this.labelPart2.smoothed = false;

		this.btnStart = this.add.bitmapText(this.world.centerX, this.world.centerY - 35, 'font', 'START', 30);
		this.btnStart.anchor.set(0.5);
		this.btnStart.inputEnabled = true;
		this.btnStart.events.onInputDown.add(() => {
			this.add.tween(this.btnStart.scale).to({ x: 1.3, y: 1.3 }, 300).start();
		});
		this.btnStart.events.onInputUp.add(() => {
			this.state.start('LevelManager');
		});
		this.btnStart.events.onInputOver.add(() => {
			this.add.tween(this.btnStart.scale).to({ x: 1.3, y: 1.3 }, 300).start();
		});
		this.btnStart.events.onInputOut.add(() => {
			this.add.tween(this.btnStart.scale).to({ x: 1, y: 1 }, 300).start();
		});

		this.btnSettings = this.add.bitmapText(this.world.centerX, this.world.centerY + 10, 'font', 'SETTINGS', 30);
		this.btnSettings.anchor.set(0.5);
		this.btnSettings.inputEnabled = true;
		this.btnSettings.events.onInputDown.add(() => {
			this.add.tween(this.btnSettings.scale).to({ x: 1.3, y: 1.3 }, 300).start();
		});
		this.btnSettings.events.onInputUp.add(() => {
			this.state.start('Settings');
		});
		this.btnSettings.events.onInputOver.add(() => {
			this.add.tween(this.btnSettings.scale).to({ x: 1.3, y: 1.3 }, 300).start();
		});
		this.btnSettings.events.onInputOut.add(() => {
			this.add.tween(this.btnSettings.scale).to({ x: 1, y: 1 }, 300).start();
		});

		this.info = this.add.bitmapText(10, this.world.height - 75, 'font2', 'Powered by azbang @v0.1', 14);
		this.info.smoothed = false;
	}
	update() {
		this.bg.tilePosition.x += 1;
		this.bg.tilePosition.y += 1;
	}
}

module.exports = Menu;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lbnUuanMiXSwibmFtZXMiOlsiTWVudSIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiYmciLCJhZGQiLCJ0aWxlU3ByaXRlIiwid29ybGQiLCJ3aWR0aCIsImhlaWdodCIsImxhYmVsUGF0aDEiLCJiaXRtYXBUZXh0Iiwic21vb3RoZWQiLCJ0d2VlbiIsInRvIiwiYWxwaGEiLCJzdGFydCIsImxvb3AiLCJsYWJlbFBhcnQyIiwiYnRuU3RhcnQiLCJjZW50ZXJYIiwiY2VudGVyWSIsImFuY2hvciIsInNldCIsImlucHV0RW5hYmxlZCIsImV2ZW50cyIsIm9uSW5wdXREb3duIiwic2NhbGUiLCJ4IiwieSIsIm9uSW5wdXRVcCIsInN0YXRlIiwib25JbnB1dE92ZXIiLCJvbklucHV0T3V0IiwiYnRuU2V0dGluZ3MiLCJpbmZvIiwidXBkYXRlIiwidGlsZVBvc2l0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBTixDQUFXO0FBQ1ZDLGVBQWMsQ0FFYjtBQUNEQyxVQUFTO0FBQ1IsT0FBS0MsRUFBTCxHQUFVLEtBQUtDLEdBQUwsQ0FBU0MsVUFBVCxDQUFvQixDQUFwQixFQUF1QixDQUF2QixFQUEwQixLQUFLQyxLQUFMLENBQVdDLEtBQXJDLEVBQTRDLEtBQUtELEtBQUwsQ0FBV0UsTUFBdkQsRUFBK0QsSUFBL0QsQ0FBVjs7QUFFQSxPQUFLQyxVQUFMLEdBQWtCLEtBQUtMLEdBQUwsQ0FBU00sVUFBVCxDQUFvQixFQUFwQixFQUF3QixFQUF4QixFQUE0QixNQUE1QixFQUFvQyxPQUFwQyxFQUE2QyxFQUE3QyxDQUFsQjtBQUNBLE9BQUtELFVBQUwsQ0FBZ0JFLFFBQWhCLEdBQTJCLEtBQTNCO0FBQ0EsT0FBS1AsR0FBTCxDQUFTUSxLQUFULENBQWUsS0FBS0gsVUFBcEIsRUFDRUksRUFERixDQUNLLEVBQUNDLE9BQU8sQ0FBUixFQURMLEVBQ2lCLEdBRGpCLEVBRUVELEVBRkYsQ0FFSyxFQUFDQyxPQUFPLENBQVIsRUFGTCxFQUVpQixHQUZqQixFQUdFQyxLQUhGLEdBSUVDLElBSkY7O0FBTUEsT0FBS0MsVUFBTCxHQUFrQixLQUFLYixHQUFMLENBQVNNLFVBQVQsQ0FBb0IsR0FBcEIsRUFBeUIsRUFBekIsRUFBNkIsTUFBN0IsRUFBcUMsU0FBckMsRUFBZ0QsRUFBaEQsQ0FBbEI7QUFDQSxPQUFLTyxVQUFMLENBQWdCTixRQUFoQixHQUEyQixLQUEzQjs7QUFFQSxPQUFLTyxRQUFMLEdBQWdCLEtBQUtkLEdBQUwsQ0FBU00sVUFBVCxDQUFvQixLQUFLSixLQUFMLENBQVdhLE9BQS9CLEVBQXdDLEtBQUtiLEtBQUwsQ0FBV2MsT0FBWCxHQUFtQixFQUEzRCxFQUErRCxNQUEvRCxFQUF1RSxPQUF2RSxFQUFnRixFQUFoRixDQUFoQjtBQUNBLE9BQUtGLFFBQUwsQ0FBY0csTUFBZCxDQUFxQkMsR0FBckIsQ0FBeUIsR0FBekI7QUFDQSxPQUFLSixRQUFMLENBQWNLLFlBQWQsR0FBNkIsSUFBN0I7QUFDQSxPQUFLTCxRQUFMLENBQWNNLE1BQWQsQ0FBcUJDLFdBQXJCLENBQWlDckIsR0FBakMsQ0FBcUMsTUFBTTtBQUMxQyxRQUFLQSxHQUFMLENBQVNRLEtBQVQsQ0FBZSxLQUFLTSxRQUFMLENBQWNRLEtBQTdCLEVBQW9DYixFQUFwQyxDQUF1QyxFQUFDYyxHQUFHLEdBQUosRUFBU0MsR0FBRyxHQUFaLEVBQXZDLEVBQXlELEdBQXpELEVBQThEYixLQUE5RDtBQUNBLEdBRkQ7QUFHQSxPQUFLRyxRQUFMLENBQWNNLE1BQWQsQ0FBcUJLLFNBQXJCLENBQStCekIsR0FBL0IsQ0FBbUMsTUFBTTtBQUN4QyxRQUFLMEIsS0FBTCxDQUFXZixLQUFYLENBQWlCLGNBQWpCO0FBQ0EsR0FGRDtBQUdBLE9BQUtHLFFBQUwsQ0FBY00sTUFBZCxDQUFxQk8sV0FBckIsQ0FBaUMzQixHQUFqQyxDQUFxQyxNQUFNO0FBQzFDLFFBQUtBLEdBQUwsQ0FBU1EsS0FBVCxDQUFlLEtBQUtNLFFBQUwsQ0FBY1EsS0FBN0IsRUFBb0NiLEVBQXBDLENBQXVDLEVBQUNjLEdBQUcsR0FBSixFQUFTQyxHQUFHLEdBQVosRUFBdkMsRUFBeUQsR0FBekQsRUFBOERiLEtBQTlEO0FBQ0EsR0FGRDtBQUdBLE9BQUtHLFFBQUwsQ0FBY00sTUFBZCxDQUFxQlEsVUFBckIsQ0FBZ0M1QixHQUFoQyxDQUFvQyxNQUFNO0FBQ3pDLFFBQUtBLEdBQUwsQ0FBU1EsS0FBVCxDQUFlLEtBQUtNLFFBQUwsQ0FBY1EsS0FBN0IsRUFBb0NiLEVBQXBDLENBQXVDLEVBQUNjLEdBQUcsQ0FBSixFQUFPQyxHQUFHLENBQVYsRUFBdkMsRUFBcUQsR0FBckQsRUFBMERiLEtBQTFEO0FBQ0EsR0FGRDs7QUFLQSxPQUFLa0IsV0FBTCxHQUFtQixLQUFLN0IsR0FBTCxDQUFTTSxVQUFULENBQW9CLEtBQUtKLEtBQUwsQ0FBV2EsT0FBL0IsRUFBd0MsS0FBS2IsS0FBTCxDQUFXYyxPQUFYLEdBQW1CLEVBQTNELEVBQStELE1BQS9ELEVBQXVFLFVBQXZFLEVBQW1GLEVBQW5GLENBQW5CO0FBQ0EsT0FBS2EsV0FBTCxDQUFpQlosTUFBakIsQ0FBd0JDLEdBQXhCLENBQTRCLEdBQTVCO0FBQ0EsT0FBS1csV0FBTCxDQUFpQlYsWUFBakIsR0FBZ0MsSUFBaEM7QUFDQSxPQUFLVSxXQUFMLENBQWlCVCxNQUFqQixDQUF3QkMsV0FBeEIsQ0FBb0NyQixHQUFwQyxDQUF3QyxNQUFNO0FBQzdDLFFBQUtBLEdBQUwsQ0FBU1EsS0FBVCxDQUFlLEtBQUtxQixXQUFMLENBQWlCUCxLQUFoQyxFQUF1Q2IsRUFBdkMsQ0FBMEMsRUFBQ2MsR0FBRyxHQUFKLEVBQVNDLEdBQUcsR0FBWixFQUExQyxFQUE0RCxHQUE1RCxFQUFpRWIsS0FBakU7QUFDQSxHQUZEO0FBR0EsT0FBS2tCLFdBQUwsQ0FBaUJULE1BQWpCLENBQXdCSyxTQUF4QixDQUFrQ3pCLEdBQWxDLENBQXNDLE1BQU07QUFDM0MsUUFBSzBCLEtBQUwsQ0FBV2YsS0FBWCxDQUFpQixVQUFqQjtBQUNBLEdBRkQ7QUFHQSxPQUFLa0IsV0FBTCxDQUFpQlQsTUFBakIsQ0FBd0JPLFdBQXhCLENBQW9DM0IsR0FBcEMsQ0FBd0MsTUFBTTtBQUM3QyxRQUFLQSxHQUFMLENBQVNRLEtBQVQsQ0FBZSxLQUFLcUIsV0FBTCxDQUFpQlAsS0FBaEMsRUFBdUNiLEVBQXZDLENBQTBDLEVBQUNjLEdBQUcsR0FBSixFQUFTQyxHQUFHLEdBQVosRUFBMUMsRUFBNEQsR0FBNUQsRUFBaUViLEtBQWpFO0FBQ0EsR0FGRDtBQUdBLE9BQUtrQixXQUFMLENBQWlCVCxNQUFqQixDQUF3QlEsVUFBeEIsQ0FBbUM1QixHQUFuQyxDQUF1QyxNQUFNO0FBQzVDLFFBQUtBLEdBQUwsQ0FBU1EsS0FBVCxDQUFlLEtBQUtxQixXQUFMLENBQWlCUCxLQUFoQyxFQUF1Q2IsRUFBdkMsQ0FBMEMsRUFBQ2MsR0FBRyxDQUFKLEVBQU9DLEdBQUcsQ0FBVixFQUExQyxFQUF3RCxHQUF4RCxFQUE2RGIsS0FBN0Q7QUFDQSxHQUZEOztBQUlBLE9BQUttQixJQUFMLEdBQVksS0FBSzlCLEdBQUwsQ0FBU00sVUFBVCxDQUFvQixFQUFwQixFQUF3QixLQUFLSixLQUFMLENBQVdFLE1BQVgsR0FBa0IsRUFBMUMsRUFBOEMsT0FBOUMsRUFBdUQseUJBQXZELEVBQWtGLEVBQWxGLENBQVo7QUFDQSxPQUFLMEIsSUFBTCxDQUFVdkIsUUFBVixHQUFxQixLQUFyQjtBQUNBO0FBQ0R3QixVQUFTO0FBQ1IsT0FBS2hDLEVBQUwsQ0FBUWlDLFlBQVIsQ0FBcUJULENBQXJCLElBQTBCLENBQTFCO0FBQ0EsT0FBS3hCLEVBQUwsQ0FBUWlDLFlBQVIsQ0FBcUJSLENBQXJCLElBQTBCLENBQTFCO0FBQ0E7QUF6RFM7O0FBNERYUyxPQUFPQyxPQUFQLEdBQWlCdEMsSUFBakIiLCJmaWxlIjoiTWVudS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIE1lbnUge1xyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cclxuXHR9XHJcblx0Y3JlYXRlKCkge1xyXG5cdFx0dGhpcy5iZyA9IHRoaXMuYWRkLnRpbGVTcHJpdGUoMCwgMCwgdGhpcy53b3JsZC53aWR0aCwgdGhpcy53b3JsZC5oZWlnaHQsICdiZycpO1xyXG5cclxuXHRcdHRoaXMubGFiZWxQYXRoMSA9IHRoaXMuYWRkLmJpdG1hcFRleHQoODcsIDI1LCAnZm9udCcsICdCTElOSycsIDM1KTtcclxuXHRcdHRoaXMubGFiZWxQYXRoMS5zbW9vdGhlZCA9IGZhbHNlO1xyXG5cdFx0dGhpcy5hZGQudHdlZW4odGhpcy5sYWJlbFBhdGgxKVxyXG5cdFx0XHQudG8oe2FscGhhOiAwfSwgMjAwKVxyXG5cdFx0XHQudG8oe2FscGhhOiAxfSwgMTAwKVxyXG5cdFx0XHQuc3RhcnQoKVxyXG5cdFx0XHQubG9vcCgpO1xyXG5cclxuXHRcdHRoaXMubGFiZWxQYXJ0MiA9IHRoaXMuYWRkLmJpdG1hcFRleHQoMjQ4LCAzNSwgJ2ZvbnQnLCAnU0hPT1RFUicsIDI1KTtcclxuXHRcdHRoaXMubGFiZWxQYXJ0Mi5zbW9vdGhlZCA9IGZhbHNlO1xyXG5cclxuXHRcdHRoaXMuYnRuU3RhcnQgPSB0aGlzLmFkZC5iaXRtYXBUZXh0KHRoaXMud29ybGQuY2VudGVyWCwgdGhpcy53b3JsZC5jZW50ZXJZLTM1LCAnZm9udCcsICdTVEFSVCcsIDMwKTtcclxuXHRcdHRoaXMuYnRuU3RhcnQuYW5jaG9yLnNldCgwLjUpO1xyXG5cdFx0dGhpcy5idG5TdGFydC5pbnB1dEVuYWJsZWQgPSB0cnVlO1xyXG5cdFx0dGhpcy5idG5TdGFydC5ldmVudHMub25JbnB1dERvd24uYWRkKCgpID0+IHtcclxuXHRcdFx0dGhpcy5hZGQudHdlZW4odGhpcy5idG5TdGFydC5zY2FsZSkudG8oe3g6IDEuMywgeTogMS4zfSwgMzAwKS5zdGFydCgpO1xyXG5cdFx0fSk7XHJcblx0XHR0aGlzLmJ0blN0YXJ0LmV2ZW50cy5vbklucHV0VXAuYWRkKCgpID0+IHtcclxuXHRcdFx0dGhpcy5zdGF0ZS5zdGFydCgnTGV2ZWxNYW5hZ2VyJyk7XHJcblx0XHR9KTtcclxuXHRcdHRoaXMuYnRuU3RhcnQuZXZlbnRzLm9uSW5wdXRPdmVyLmFkZCgoKSA9PiB7XHJcblx0XHRcdHRoaXMuYWRkLnR3ZWVuKHRoaXMuYnRuU3RhcnQuc2NhbGUpLnRvKHt4OiAxLjMsIHk6IDEuM30sIDMwMCkuc3RhcnQoKTtcclxuXHRcdH0pO1xyXG5cdFx0dGhpcy5idG5TdGFydC5ldmVudHMub25JbnB1dE91dC5hZGQoKCkgPT4ge1xyXG5cdFx0XHR0aGlzLmFkZC50d2Vlbih0aGlzLmJ0blN0YXJ0LnNjYWxlKS50byh7eDogMSwgeTogMX0sIDMwMCkuc3RhcnQoKTtcclxuXHRcdH0pO1xyXG5cclxuXHJcblx0XHR0aGlzLmJ0blNldHRpbmdzID0gdGhpcy5hZGQuYml0bWFwVGV4dCh0aGlzLndvcmxkLmNlbnRlclgsIHRoaXMud29ybGQuY2VudGVyWSsxMCwgJ2ZvbnQnLCAnU0VUVElOR1MnLCAzMCk7XHJcblx0XHR0aGlzLmJ0blNldHRpbmdzLmFuY2hvci5zZXQoMC41KTtcclxuXHRcdHRoaXMuYnRuU2V0dGluZ3MuaW5wdXRFbmFibGVkID0gdHJ1ZTtcclxuXHRcdHRoaXMuYnRuU2V0dGluZ3MuZXZlbnRzLm9uSW5wdXREb3duLmFkZCgoKSA9PiB7XHJcblx0XHRcdHRoaXMuYWRkLnR3ZWVuKHRoaXMuYnRuU2V0dGluZ3Muc2NhbGUpLnRvKHt4OiAxLjMsIHk6IDEuM30sIDMwMCkuc3RhcnQoKTtcclxuXHRcdH0pO1xyXG5cdFx0dGhpcy5idG5TZXR0aW5ncy5ldmVudHMub25JbnB1dFVwLmFkZCgoKSA9PiB7XHJcblx0XHRcdHRoaXMuc3RhdGUuc3RhcnQoJ1NldHRpbmdzJyk7XHJcblx0XHR9KTtcclxuXHRcdHRoaXMuYnRuU2V0dGluZ3MuZXZlbnRzLm9uSW5wdXRPdmVyLmFkZCgoKSA9PiB7XHJcblx0XHRcdHRoaXMuYWRkLnR3ZWVuKHRoaXMuYnRuU2V0dGluZ3Muc2NhbGUpLnRvKHt4OiAxLjMsIHk6IDEuM30sIDMwMCkuc3RhcnQoKTtcclxuXHRcdH0pO1xyXG5cdFx0dGhpcy5idG5TZXR0aW5ncy5ldmVudHMub25JbnB1dE91dC5hZGQoKCkgPT4ge1xyXG5cdFx0XHR0aGlzLmFkZC50d2Vlbih0aGlzLmJ0blNldHRpbmdzLnNjYWxlKS50byh7eDogMSwgeTogMX0sIDMwMCkuc3RhcnQoKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdHRoaXMuaW5mbyA9IHRoaXMuYWRkLmJpdG1hcFRleHQoMTAsIHRoaXMud29ybGQuaGVpZ2h0LTc1LCAnZm9udDInLCAnUG93ZXJlZCBieSBhemJhbmcgQHYwLjEnLCAxNCk7XHJcblx0XHR0aGlzLmluZm8uc21vb3RoZWQgPSBmYWxzZTtcclxuXHR9XHJcblx0dXBkYXRlKCkge1xyXG5cdFx0dGhpcy5iZy50aWxlUG9zaXRpb24ueCArPSAxO1xyXG5cdFx0dGhpcy5iZy50aWxlUG9zaXRpb24ueSArPSAxO1xyXG5cdH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBNZW51OyJdfQ==
},{}],13:[function(require,module,exports){
class Preload {
	constructor() {}
	preload() {
		this.load.audio('music1', '../assets/music/theme-1.ogg');
		this.load.audio('music2', '../assets/music/theme-2.ogg');
		this.load.audio('music3', '../assets/music/theme-3.ogg');
		this.load.audio('music4', '../assets/music/theme-4.wav');

		this.load.image('bg', '../assets/bg.png');
		this.load.image('tilemap', '../assets/levels/tilemap.png');
		this.load.image('lifebox', '../assets/hud/lifebox.png');
		this.load.image('liferect', '../assets/hud/liferect.png');
		this.load.image('score', '../assets/hud/score.png');
		this.load.image('window', '../assets/window.png');

		this.load.spritesheet('fx_jump', '../assets/FX/jump.png', 47, 45, 6);
		this.load.spritesheet('fx_fire', '../assets/FX/fire.png', 32, 33, 6);
		this.load.spritesheet('fx_explosion', '../assets/FX/explosion.png', 35, 36, 7);
		this.load.spritesheet('fx_hit', '../assets/FX/hit.png', 16, 16, 6);
		this.load.spritesheet('fx_collide', '../assets/FX/collide.png', 37, 37, 6);

		this.load.spritesheet('legs', '../assets/legs.png', 15, 17, 4);

		this.load.bitmapFont('font', '../assets/font.png', '../assets/font.xml');
		this.load.bitmapFont('font2', '../assets/font2.png', '../assets/font2.xml');

		this.load.atlas('heads', 'assets/atlases/heads.png', 'assets/atlases/heads.json', Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);
		this.load.atlas('bodies', 'assets/atlases/bodies.png', 'assets/atlases/bodies.json', Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);
		this.load.atlas('attachToBody', 'assets/atlases/attachToBody.png', 'assets/atlases/attachToBody.json', Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);
		this.load.atlas('weapons', 'assets/atlases/weapons.png', 'assets/atlases/weapons.json', Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);
		this.load.atlas('items', 'assets/atlases/items.png', 'assets/atlases/items.json', Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);
		this.load.atlas('bullets', 'assets/atlases/bullets.png', 'assets/atlases/bullets.json', Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);
	}

	create() {
		let musics = [this.add.audio('music1'), this.add.audio('music2'), this.add.audio('music3'), this.add.audio('music4')];
		for (let i = 0; i < musics.length; i++) {
			(() => {
				let next = i + 1 > musics.length - 1 ? 0 : i + 1;
				musics[i].onStop.add(() => musics[next].play());
			})();
		}
		musics[0].play();
		this.game.musics = musics;

		this.state.start('Menu');
	}
}

module.exports = Preload;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByZWxvYWQuanMiXSwibmFtZXMiOlsiUHJlbG9hZCIsImNvbnN0cnVjdG9yIiwicHJlbG9hZCIsImxvYWQiLCJhdWRpbyIsImltYWdlIiwic3ByaXRlc2hlZXQiLCJiaXRtYXBGb250IiwiYXRsYXMiLCJQaGFzZXIiLCJMb2FkZXIiLCJURVhUVVJFX0FUTEFTX0pTT05fSEFTSCIsImNyZWF0ZSIsIm11c2ljcyIsImFkZCIsImkiLCJsZW5ndGgiLCJuZXh0Iiwib25TdG9wIiwicGxheSIsImdhbWUiLCJzdGF0ZSIsInN0YXJ0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTixDQUFjO0FBQ2JDLGVBQWMsQ0FFYjtBQUNEQyxXQUFVO0FBQ1QsT0FBS0MsSUFBTCxDQUFVQyxLQUFWLENBQWdCLFFBQWhCLEVBQTBCLDZCQUExQjtBQUNBLE9BQUtELElBQUwsQ0FBVUMsS0FBVixDQUFnQixRQUFoQixFQUEwQiw2QkFBMUI7QUFDQSxPQUFLRCxJQUFMLENBQVVDLEtBQVYsQ0FBZ0IsUUFBaEIsRUFBMEIsNkJBQTFCO0FBQ0EsT0FBS0QsSUFBTCxDQUFVQyxLQUFWLENBQWdCLFFBQWhCLEVBQTBCLDZCQUExQjs7QUFFQSxPQUFLRCxJQUFMLENBQVVFLEtBQVYsQ0FBZ0IsSUFBaEIsRUFBc0Isa0JBQXRCO0FBQ0EsT0FBS0YsSUFBTCxDQUFVRSxLQUFWLENBQWdCLFNBQWhCLEVBQTJCLDhCQUEzQjtBQUNBLE9BQUtGLElBQUwsQ0FBVUUsS0FBVixDQUFnQixTQUFoQixFQUEyQiwyQkFBM0I7QUFDQSxPQUFLRixJQUFMLENBQVVFLEtBQVYsQ0FBZ0IsVUFBaEIsRUFBNEIsNEJBQTVCO0FBQ0EsT0FBS0YsSUFBTCxDQUFVRSxLQUFWLENBQWdCLE9BQWhCLEVBQXlCLHlCQUF6QjtBQUNBLE9BQUtGLElBQUwsQ0FBVUUsS0FBVixDQUFnQixRQUFoQixFQUEwQixzQkFBMUI7O0FBRUEsT0FBS0YsSUFBTCxDQUFVRyxXQUFWLENBQXNC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ZEMsT0FBT0MsT0FBUCxHQUFpQnhCLE9BQWpCIiwiZmlsZSI6IlByZWxvYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBQcmVsb2FkIHtcclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHJcblx0fVxyXG5cdHByZWxvYWQoKSB7XHJcblx0XHR0aGlzLmxvYWQuYXVkaW8oJ211c2ljMScsICcuLi9hc3NldHMvbXVzaWMvdGhlbWUtMS5vZ2cnKTtcclxuXHRcdHRoaXMubG9hZC5hdWRpbygnbXVzaWMyJywgJy4uL2Fzc2V0cy9tdXNpYy90aGVtZS0yLm9nZycpO1xyXG5cdFx0dGhpcy5sb2FkLmF1ZGlvKCdtdXNpYzMnLCAnLi4vYXNzZXRzL211c2ljL3RoZW1lLTMub2dnJyk7XHJcblx0XHR0aGlzLmxvYWQuYXVkaW8oJ211c2ljNCcsICcuLi9hc3NldHMvbXVzaWMvdGhlbWUtNC53YXYnKTtcclxuXHJcblx0XHR0aGlzLmxvYWQuaW1hZ2UoJ2JnJywgJy4uL2Fzc2V0cy9iZy5wbmcnKTtcclxuXHRcdHRoaXMubG9hZC5pbWFnZSgndGlsZW1hcCcsICcuLi9hc3NldHMvbGV2ZWxzL3RpbGVtYXAucG5nJyk7XHJcblx0XHR0aGlzLmxvYWQuaW1hZ2UoJ2xpZmVib3gnLCAnLi4vYXNzZXRzL2h1ZC9saWZlYm94LnBuZycpO1xyXG5cdFx0dGhpcy5sb2FkLmltYWdlKCdsaWZlcmVjdCcsICcuLi9hc3NldHMvaHVkL2xpZmVyZWN0LnBuZycpO1xyXG5cdFx0dGhpcy5sb2FkLmltYWdlKCdzY29yZScsICcuLi9hc3NldHMvaHVkL3Njb3JlLnBuZycpO1xyXG5cdFx0dGhpcy5sb2FkLmltYWdlKCd3aW5kb3cnLCAnLi4vYXNzZXRzL3dpbmRvdy5wbmcnKTtcclxuXHJcblx0XHR0aGlzLmxvYWQuc3ByaXRlc2hlZXQoJ2Z4X2p1bXAnLCAnLi4vYXNzZXRzL0ZYL2p1bXAucG5nJywgNDcsIDQ1LCA2KTtcclxuXHRcdHRoaXMubG9hZC5zcHJpdGVzaGVldCgnZnhfZmlyZScsICcuLi9hc3NldHMvRlgvZmlyZS5wbmcnLCAzMiwgMzMsIDYpO1xyXG5cdFx0dGhpcy5sb2FkLnNwcml0ZXNoZWV0KCdmeF9leHBsb3Npb24nLCAnLi4vYXNzZXRzL0ZYL2V4cGxvc2lvbi5wbmcnLCAzNSwgMzYsIDcpO1xyXG5cdFx0dGhpcy5sb2FkLnNwcml0ZXNoZWV0KCdmeF9oaXQnLCAnLi4vYXNzZXRzL0ZYL2hpdC5wbmcnLCAxNiwgMTYsIDYpO1xyXG5cdFx0dGhpcy5sb2FkLnNwcml0ZXNoZWV0KCdmeF9jb2xsaWRlJywgJy4uL2Fzc2V0cy9GWC9jb2xsaWRlLnBuZycsIDM3LCAzNywgNik7XHJcblxyXG5cdFx0dGhpcy5sb2FkLnNwcml0ZXNoZWV0KCdsZWdzJywgJy4uL2Fzc2V0cy9sZWdzLnBuZycsIDE1LCAxNywgNCk7XHJcblxyXG5cdFx0dGhpcy5sb2FkLmJpdG1hcEZvbnQoJ2ZvbnQnLCAnLi4vYXNzZXRzL2ZvbnQucG5nJywgJy4uL2Fzc2V0cy9mb250LnhtbCcpO1xyXG5cdFx0dGhpcy5sb2FkLmJpdG1hcEZvbnQoJ2ZvbnQyJywgJy4uL2Fzc2V0cy9mb250Mi5wbmcnLCAnLi4vYXNzZXRzL2ZvbnQyLnhtbCcpO1xyXG5cclxuXHRcdHRoaXMubG9hZC5hdGxhcygnaGVhZHMnLCAnYXNzZXRzL2F0bGFzZXMvaGVhZHMucG5nJywgJ2Fzc2V0cy9hdGxhc2VzL2hlYWRzLmpzb24nLCBQaGFzZXIuTG9hZGVyLlRFWFRVUkVfQVRMQVNfSlNPTl9IQVNIKTtcclxuXHRcdHRoaXMubG9hZC5hdGxhcygnYm9kaWVzJywgJ2Fzc2V0cy9hdGxhc2VzL2JvZGllcy5wbmcnLCAnYXNzZXRzL2F0bGFzZXMvYm9kaWVzLmpzb24nLCBQaGFzZXIuTG9hZGVyLlRFWFRVUkVfQVRMQVNfSlNPTl9IQVNIKTtcclxuXHRcdHRoaXMubG9hZC5hdGxhcygnYXR0YWNoVG9Cb2R5JywgJ2Fzc2V0cy9hdGxhc2VzL2F0dGFjaFRvQm9keS5wbmcnLCAnYXNzZXRzL2F0bGFzZXMvYXR0YWNoVG9Cb2R5Lmpzb24nLCBQaGFzZXIuTG9hZGVyLlRFWFRVUkVfQVRMQVNfSlNPTl9IQVNIKTtcclxuXHRcdHRoaXMubG9hZC5hdGxhcygnd2VhcG9ucycsICdhc3NldHMvYXRsYXNlcy93ZWFwb25zLnBuZycsICdhc3NldHMvYXRsYXNlcy93ZWFwb25zLmpzb24nLCBQaGFzZXIuTG9hZGVyLlRFWFRVUkVfQVRMQVNfSlNPTl9IQVNIKTtcclxuXHRcdHRoaXMubG9hZC5hdGxhcygnaXRlbXMnLCAnYXNzZXRzL2F0bGFzZXMvaXRlbXMucG5nJywgJ2Fzc2V0cy9hdGxhc2VzL2l0ZW1zLmpzb24nLCBQaGFzZXIuTG9hZGVyLlRFWFRVUkVfQVRMQVNfSlNPTl9IQVNIKTtcclxuXHRcdHRoaXMubG9hZC5hdGxhcygnYnVsbGV0cycsICdhc3NldHMvYXRsYXNlcy9idWxsZXRzLnBuZycsICdhc3NldHMvYXRsYXNlcy9idWxsZXRzLmpzb24nLCBQaGFzZXIuTG9hZGVyLlRFWFRVUkVfQVRMQVNfSlNPTl9IQVNIKTtcclxuXHR9XHJcblxyXG5cdGNyZWF0ZSgpIHtcclxuXHRcdGxldCBtdXNpY3MgPSBbXHJcblx0XHRcdHRoaXMuYWRkLmF1ZGlvKCdtdXNpYzEnKSxcclxuXHRcdFx0dGhpcy5hZGQuYXVkaW8oJ211c2ljMicpLFxyXG5cdFx0XHR0aGlzLmFkZC5hdWRpbygnbXVzaWMzJyksXHJcblx0XHRcdHRoaXMuYWRkLmF1ZGlvKCdtdXNpYzQnKVxyXG5cdFx0XTtcclxuXHRcdGZvcihsZXQgaSA9IDA7IGkgPCBtdXNpY3MubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0KCgpID0+IHtcclxuXHRcdFx0XHRsZXQgbmV4dCA9IGkrMSA+IG11c2ljcy5sZW5ndGgtMSA/IDAgOiBpKzE7XHJcblx0XHRcdFx0bXVzaWNzW2ldLm9uU3RvcC5hZGQoKCkgPT4gbXVzaWNzW25leHRdLnBsYXkoKSk7XHJcblx0XHRcdH0pKCk7XHJcblx0XHR9XHJcblx0XHRtdXNpY3NbMF0ucGxheSgpO1xyXG5cdFx0dGhpcy5nYW1lLm11c2ljcyA9IG11c2ljcztcclxuXHJcblx0XHR0aGlzLnN0YXRlLnN0YXJ0KCdNZW51Jyk7XHJcblx0fVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFByZWxvYWQ7Il19
},{}],14:[function(require,module,exports){
class Settings {
	constructor() {}

	create() {
		this.bg = this.game.add.tileSprite(0, 0, this.world.width, this.world.height, 'bg');

		this.label = this.add.bitmapText(this.world.centerX, 50, 'font', 'SETTINGS', 30);
		this.label.anchor.set(0.5);
		this.label.smoothed = false;
	}
	update() {
		this.bg.tilePosition.x += 1;
		this.bg.tilePosition.y += 1;
	}
}

module.exports = Settings;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNldHRpbmdzLmpzIl0sIm5hbWVzIjpbIlNldHRpbmdzIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJiZyIsImdhbWUiLCJhZGQiLCJ0aWxlU3ByaXRlIiwid29ybGQiLCJ3aWR0aCIsImhlaWdodCIsImxhYmVsIiwiYml0bWFwVGV4dCIsImNlbnRlclgiLCJhbmNob3IiLCJzZXQiLCJzbW9vdGhlZCIsInVwZGF0ZSIsInRpbGVQb3NpdGlvbiIsIngiLCJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBTixDQUFlO0FBQ2RDLGVBQWMsQ0FFYjs7QUFFREMsVUFBUztBQUNSLE9BQUtDLEVBQUwsR0FBVSxLQUFLQyxJQUFMLENBQVVDLEdBQVYsQ0FBY0MsVUFBZCxDQUF5QixDQUF6QixFQUE0QixDQUE1QixFQUErQixLQUFLQyxLQUFMLENBQVdDLEtBQTFDLEVBQWlELEtBQUtELEtBQUwsQ0FBV0UsTUFBNUQsRUFBb0UsSUFBcEUsQ0FBVjs7QUFFQSxPQUFLQyxLQUFMLEdBQWEsS0FBS0wsR0FBTCxDQUFTTSxVQUFULENBQW9CLEtBQUtKLEtBQUwsQ0FBV0ssT0FBL0IsRUFBd0MsRUFBeEMsRUFBNEMsTUFBNUMsRUFBb0QsVUFBcEQsRUFBZ0UsRUFBaEUsQ0FBYjtBQUNBLE9BQUtGLEtBQUwsQ0FBV0csTUFBWCxDQUFrQkMsR0FBbEIsQ0FBc0IsR0FBdEI7QUFDQSxPQUFLSixLQUFMLENBQVdLLFFBQVgsR0FBc0IsS0FBdEI7QUFDQTtBQUNEQyxVQUFTO0FBQ1IsT0FBS2IsRUFBTCxDQUFRYyxZQUFSLENBQXFCQyxDQUFyQixJQUEwQixDQUExQjtBQUNBLE9BQUtmLEVBQUwsQ0FBUWMsWUFBUixDQUFxQkUsQ0FBckIsSUFBMEIsQ0FBMUI7QUFDQTtBQWZhOztBQWtCZkMsT0FBT0MsT0FBUCxHQUFpQnJCLFFBQWpCIiwiZmlsZSI6IlNldHRpbmdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU2V0dGluZ3Mge1xyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cclxuXHR9XHJcblxyXG5cdGNyZWF0ZSgpIHtcclxuXHRcdHRoaXMuYmcgPSB0aGlzLmdhbWUuYWRkLnRpbGVTcHJpdGUoMCwgMCwgdGhpcy53b3JsZC53aWR0aCwgdGhpcy53b3JsZC5oZWlnaHQsICdiZycpO1xyXG5cclxuXHRcdHRoaXMubGFiZWwgPSB0aGlzLmFkZC5iaXRtYXBUZXh0KHRoaXMud29ybGQuY2VudGVyWCwgNTAsICdmb250JywgJ1NFVFRJTkdTJywgMzApO1xyXG5cdFx0dGhpcy5sYWJlbC5hbmNob3Iuc2V0KDAuNSk7XHJcblx0XHR0aGlzLmxhYmVsLnNtb290aGVkID0gZmFsc2U7XHJcblx0fVxyXG5cdHVwZGF0ZSgpIHtcclxuXHRcdHRoaXMuYmcudGlsZVBvc2l0aW9uLnggKz0gMTtcclxuXHRcdHRoaXMuYmcudGlsZVBvc2l0aW9uLnkgKz0gMTtcclxuXHR9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gU2V0dGluZ3M7Il19
},{}]},{},[8])